<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Yosong6729 Blog</title>
    <link>https://yosong6729.github.io/post/</link>
    <description>Recent content in Posts on Yosong6729 Blog</description>
    <image>
      <title>Yosong6729 Blog</title>
      <url>https://yosong6729.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://yosong6729.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.133.1</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Sep 2024 21:26:15 +0900</lastBuildDate>
    <atom:link href="https://yosong6729.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[자바 ORM 표준 JPA 프로그래밍 - 기본편] 엔티티 매핑</title>
      <link>https://yosong6729.github.io/post/%EC%97%94%ED%8B%B0%ED%8B%B0-%EB%A7%A4%ED%95%91/</link>
      <pubDate>Tue, 10 Sep 2024 21:26:15 +0900</pubDate>
      <guid>https://yosong6729.github.io/post/%EC%97%94%ED%8B%B0%ED%8B%B0-%EB%A7%A4%ED%95%91/</guid>
      <description>해당 글은 김영한님의 인프런 강의 자바 ORM 표준 JPA 프로그래밍 - 기본편을 듣고 내용을 정리하기 위한 것으로 자세한 설명은 해당 강의를 통해 확인할 수 있습니다.
엔티티 매핑 객체와 테이블 매핑: @Entity, @Table 필드와 컬럼 매핑: @Column 기본 키 매핑: @Id 연관관계 매핑: @ManyToOne,@JoinColumn 객체와 테이블 매핑 @Entity
@Entity가 붙은 클래스는 JPA가 관리, 엔티티라 한다. JPA를 사용해서 테이블과 매핑할 클래스는 @Entity 필수 주의 기본 생성자 필수(파라미터가 없는 public 또는 protected 생성자) final 클래스, enum, interface, inner 클래스 사용X 저장할 필드에 final 사용 X @Entity 속성 정리</description>
    </item>
    <item>
      <title>[자바 ORM 표준 JPA 프로그래밍 - 기본편] 영속성 관리</title>
      <link>https://yosong6729.github.io/post/%EC%98%81%EC%86%8D%EC%84%B1/%EC%98%81%EC%86%8D%EC%84%B1/</link>
      <pubDate>Mon, 09 Sep 2024 18:21:27 +0900</pubDate>
      <guid>https://yosong6729.github.io/post/%EC%98%81%EC%86%8D%EC%84%B1/%EC%98%81%EC%86%8D%EC%84%B1/</guid>
      <description>해당 글은 김영한님의 인프런 강의 자바 ORM 표준 JPA 프로그래밍 - 기본편을 듣고 내용을 정리하기 위한 것으로 자세한 설명은 해당 강의를 통해 확인할 수 있습니다.
영속성 컨텍스트 JPA에서 가장 중요한 2가지 객체와 관계형 데이터베이스 매핑하기(Object Relational Mapping) 영속성 컨텍스트 영속성 컨텍스트는 엔티티를 영구 저장하는 환경이라는 뜻이다. 논리적인 개념이며 눈에 보이지 않는다. 엔티티 매니저를 통해서 영속성 컨텍스트에 접근할 수 있다.
생명주기 엔티티는 아래와 같은 생명주기가 존재한다.
비영속 (new/transient) 영속성 컨텍스트와 전혀 관계가 없는 새로운 상태 영속 (managed) 영속성 컨텍스트에 관리되는 상태 준영속 (detached) 영속성 컨텍스트에 저장되었다가 분리된 상 삭제 (removed) 삭제된 상태 비영속 1 2 3 4 //객체를 생성한 상태(비영속) Member member = new Member(); member.</description>
    </item>
    <item>
      <title>New Post</title>
      <link>https://yosong6729.github.io/post/new-post/</link>
      <pubDate>Wed, 04 Sep 2024 17:32:42 +0900</pubDate>
      <guid>https://yosong6729.github.io/post/new-post/</guid>
      <description></description>
    </item>
  </channel>
</rss>
